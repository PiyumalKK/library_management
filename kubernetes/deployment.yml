# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: my-app-deployment
# spec:
#   replicas: 2
#   selector:
#     matchLabels:
#       app: my-app
#   template:
#     metadata:
#       labels:
#         app: my-app
#     spec:
#       containers:
#       - name: backend
#         image: LibraryContainer.azurecr.io/backend:latest
#         ports:
#         - containerPort: 8080
#       - name: frontend
#         image: LibraryContainer.azurecr.io/frontend:latest
#         ports:
#         - containerPort: 80
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: my-app-service
# spec:
#   selector:
#     app: my-app
#   ports:
#     - protocol: TCP
#       port: 80
#       targetPort: 80
#   type: LoadBalancer

# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: my-app-deployment
# spec:
#   replicas: 2
#   selector:
#     matchLabels:
#       app: my-app
#   template:
#     metadata:
#       labels:
#         app: my-app
#     spec:
#       containers:
#       - name: backend
#         image: librarycontainer.azurecr.io/backend:latest
#         ports:
#         - containerPort: 8080
#       - name: frontend
#         image: librarycontainer.azurecr.io/frontend:latest
#         ports:
#         - containerPort: 80
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: my-app-service
# spec:
#   selector:
#     app: my-app
#   ports:
#     - protocol: TCP
#       port: 80
#       targetPort: 80
#   type: LoadBalancer

apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-app-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: my-app
  template:
    metadata:
      labels:
        app: my-app
    spec:
      imagePullSecrets:
      - name: acr-auth
      containers:
      - name: backend
        image: librarycontainer.azurecr.io/backend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
      - name: frontend
        image: librarycontainer.azurecr.io/frontend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: my-app-service
spec:
  selector:
    app: my-app
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
  type: LoadBalancer
